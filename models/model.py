model = layers.Sequential([
    layers.Conv2D(32, kernel_size=(3, 3),activation='linear',input_shape=(28,28,1),padding='same'),
    layers.LeakyReLU(alpha=0.1),
    layers.MaxPooling2D((2, 2),padding='same')),
    layers.Conv2D(64, (3, 3), activation='linear',padding='same'),
    layers.LeakyReLU(alpha=0.1),
    layers.MaxPooling2D(pool_size=(2, 2),padding='same'),
    layers.Conv2D(128, (3, 3), activation='linear',padding='same'),
    layers.LeakyReLU(alpha=0.1),
    layers.MaxPooling2D(pool_size=(2, 2),padding='same'),
    layers.Flatten(),
    layers.Dense(128, activation='linear'),
    layers.LeakyReLU(alpha=0.1),        
    layers.Dense(num_classes, activation='softmax'),
]
